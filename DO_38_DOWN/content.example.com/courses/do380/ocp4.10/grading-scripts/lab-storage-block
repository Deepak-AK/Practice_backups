#!/bin/bash
#
# Copyright 2020, 2022 Red Hat, Inc.
#
# NAME
#     lab-storage-file - lab script for DO380-OCP4
#
# SYNOPSIS
#     lab-storage-file {start|finish}
#
#        start  - prepare the system for starting the lab
#        finish - perform post-lab finish
#
# DESCRIPTION
#     This script, based on singular argument, either does start or finish for
#     the [name of the exercise]
#
# CHANGELOG
#   * Fri Sep 30 2022 Herve Quatremain <hquatrem@redhat.com>
#   - Cleaning up iSCSI configuration (Jira #DO380-169)
#   * Wed Jul 29 Michael Phillips <miphilli@redhat.com>
#   - added the ocp4_login_as_admin function after the ocp4_is_cluster_up function
#   * Mod Jun 1 Dan Kolepp <dkolepp@redhat.com>
#   - initial creation


PATH=/usr/bin:/bin:/usr/sbin:/sbin:/root/bin:/usr/local/bin
declare -a valid_commands=(start finish)

# Change these variables to match your exercise
this='storage-block'
title='Guided Exercise: Provisioning Block Storage for Databases'
playbook_dir="/usr/local/lib/ansible"

# Do not change these variables
target='workstation'
run_as_root='true'

function lab_start {

  ocp4_print_prereq_header

  ocp4_is_cluster_up
  ocp4_login_as_admin
  # For this GE in particular, a default storage class is disabled.
  # Typically, for other GEs, set this to "true"

  # TODO: Toggle below two lines after default storage class name is changed.
  ocp4_set_default_storageclass nfs-storage true
  print_line
  ocp4_fail_and_exit_if_project_exists "${this}"

  ocp4_print_setup_header

  print_line
  print_line " Preparing the student's cluster:"

  deploy_ansible

  ocp4_grab_lab_files

  pad2 "Configuring repositories"
  playbook=${playbook_dir}/common/disable-epel-repos.yaml

  if ansible-playbook ${playbook}
  then
    print_SUCCESS
  else
    print_FAIL
  fi
  ssh lab@utility "sudo yum repolist --all"

  ocp4_print_setup_footer
}

function lab_finish {

  ocp4_print_cleanup_header

  pad2 "Configuring repositories"
  playbook=${playbook_dir}/common/restore-epel-repos.yaml

  if ansible-playbook ${playbook}
  then
    print_SUCCESS
  else
    print_FAIL
  fi
  ssh lab@utility "sudo yum repolist --all"

  ocp4_login_as_admin
  ocp4_set_default_storageclass nfs-storage "true"
  ocp4_delete_project "${this}"

  pad2 "Deleting the persistent volumes and the storage class"
  ansible-playbook ${playbook_dir}/${this}/delete_pvs.yml &
  local pid=$!
  spinner ${pid} 2
  if wait ${pid}
  then
    print_SUCCESS
  else
    print_FAIL
  fi

  pad2 "Cleaning iSCSI target"
  ansible-playbook ${playbook_dir}/${this}/clean_iscsi.yml &
  local pid=$!
  spinner ${pid} 2
  if wait ${pid}
  then
    print_SUCCESS
  else
    print_FAIL
  fi

  ocp4_cleanup_lab_files
  ocp4_print_cleanup_footer
}

############### Don't EVER change anything below this line ###############

# Source library of functions
source /usr/local/lib/${function_lib}
source /usr/local/lib/${platform_lib}

grading_main_program "$@"
