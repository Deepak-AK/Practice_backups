#!/bin/bash
#
# Copyright 2020, 2022 Red Hat, Inc.
#
# NAME
#     lab-logging-diagnose - lab script for DO380-OCP4
#
# SYNOPSIS
#     lab-logging-diagnose {start|finish}
#
#        start  - prepare the system for starting the lab
#        finish - perform post-lab finish
#
# DESCRIPTION
#     This script, based on singular argument, either does start or finish for
#     the Guided Exercise: Diagnosing Cluster Logging Problems
#
# CHANGELOG
#   * Tue Sep 13 2022 Herve Quatremain <hquatrem@redhat.com>
#   - Deploying the cluster logging operator
#   * Tue June 24 Alex Corcoles <alexcorcoles@redhat.com>
#   - copied from lab-logging-query


PATH=/usr/bin:/bin:/usr/sbin:/sbin:/root/bin:/usr/local/bin
declare -a valid_commands=(start finish)

# Change these variables to match your exercise
this='logging-diagnose'
title='Guided Exercise: Diagnosing Cluster Logging Problems'
playbook_dir="/usr/local/lib/ansible"

# Do not change these variables
target='workstation'
run_as_root='true'


function lab_start {

  ocp4_print_prereq_header

  ocp4_is_cluster_up
  ocp4_login_as_admin
  ocp4_exit_on_failure
  print_line

  ocp4_fail_and_exit_if_project_exists "${this}"

  ocp4_print_setup_header

  print_line
  print_line " Preparing the student's cluster:"
  deploy_ansible
  opc4_restart_package_server_if_required

  pad2 "Reconfiguring large nodes as infra nodes"
  ansible-playbook "${playbook_dir}/infra/set_role.yml" &
  local pid="$!"
  spinner "${pid}"
  if wait "${pid}"
  then
    print_SUCCESS
  else
    print_FAIL
  fi
  ocp4_exit_on_failure

  pad2 "Installing the Local Storage Operator"
  ansible-playbook "${playbook_dir}/lso/set_lso.yml" &
  pid="$!"
  spinner "${pid}"
  if wait "${pid}"
  then
    print_SUCCESS
  else
    print_FAIL
  fi
  ocp4_exit_on_failure

  pad2 "Installing Red Hat OpenShift Logging"
  ansible-playbook "${playbook_dir}/logging/set_logging.yml" &
  pid="$!"
  spinner "${pid}"
  if wait "${pid}"
  then
    print_SUCCESS
  else
    print_FAIL
  fi
  ocp4_exit_on_failure

  ocp4_grab_lab_files "no-solution"

  pad2 "Creating noisy Deployment"
  if oc create -f /home/student/${RHT_COURSE^^}/labs/${this}/noisy.yml
  then
    print_SUCCESS
  else
    print_FAIL
  fi

  ocp4_print_setup_footer
}

function lab_finish {
  ocp4_print_cleanup_header
  ocp4_login_as_admin

  ocp4_delete_project "${this}"
  ocp4_cleanup_lab_files

  pad2 "Removing OpenShift logging"
  ansible-playbook "${playbook_dir}/logging/unset_logging.yml" &
  local pid="$!"
  spinner "${pid}"
  if wait "${pid}"
  then
    print_SUCCESS
  else
    print_FAIL
  fi

  pad2 "Removing the Local Storage Operator"
  ansible-playbook "${playbook_dir}/lso/unset_lso.yml" &
  pid="$!"
  spinner "${pid}"
  if wait "${pid}"
  then
    print_SUCCESS
  else
    print_FAIL
  fi

  pad2 "Reconfiguring larges nodes as worker nodes"
  if ansible-playbook "${playbook_dir}/infra/unset_role.yml"
  then
    print_SUCCESS
  else
    print_FAIL
  fi

  ocp4_print_cleanup_footer
}


############### Don't EVER change anything below this line ###############

# Source library of functions
source /usr/local/lib/${function_lib}
source /usr/local/lib/${platform_lib}

grading_main_program "$@"
