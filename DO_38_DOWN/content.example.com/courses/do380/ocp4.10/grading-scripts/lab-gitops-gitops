#!/bin/bash
#
# Copyright 2020, 2022 Red Hat, Inc.
#
# NAME
#     lab-gitops-gitops - lab script for DO380-OCP4
#
# SYNOPSIS
#     lab-gitops-gitops {start|finish}
#
#        start  - prepare the system for starting the lab
#        finish - perform post-lab finish
#
# DESCRIPTION
#     This script, based on singular argument, either does start or finish for
#     "Configuring OpenShift using GitOps and Jenkins"
#
# CHANGELOG
#   * Fri Sep  2 2022 Herve Quatremain <hquatrem@redhat.com>
#   - Create, populate, and delete GitLab project
#   - Deploy and delete Jenkins
#   * Wed Jul 29 Michael Phillips <miphilli@redhat.com>
#   - added the ocp4_login_as_admin function after the ocp4_is_cluster_up function
#   * Tue Jun 10 Fernando Lozano <flozano@redhat.com>
#   - original code

#########################################################################

PATH=/usr/bin:/bin:/usr/sbin:/sbin:/root/bin:/usr/local/bin
declare -a valid_commands=(start finish)

# Change these variables to match your exercise
this='gitops-gitops'
title='Guided Exercise: Configuring OpenShift using GitOps and Jenkins'
playbook_dir="/usr/local/lib/ansible"

# Do not change these variables
target='workstation'
run_as_root='true'


function lab_start {

  ocp4_print_prereq_header

  ocp4_is_cluster_up
  ocp4_login_as_admin
  print_line

  ocp4_fail_and_exit_if_project_exists "${this}"

  ocp4_print_setup_header

  print_line
  print_line " Preparing the student's cluster:"
  ocp4_restore_oauth
  ocp4_grab_lab_files
  deploy_ansible

  pad2 "Creating the ${this} Git repository"
  ansible-playbook ${playbook_dir}/${this}/gitlab_create.yml &
  local pid=$!
  spinner ${pid} 2
  if wait ${pid}
  then
    print_SUCCESS
  else
    print_FAIL
  fi

  pad2 "Patching the Jenkins persistent template"
  TMP_FILE=$(mktemp --suffix .yml)
  oc get template jenkins-persistent -n openshift -o yaml > "${TMP_FILE}"
  if grep -qF /etc/pki/tls/certs "${TMP_FILE}"
  then
    print_SUCCESS
  else
    sed -i -e 's:/etc/pki/ca-trust/source/anchors:/etc/pki/tls/certs:' "${TMP_FILE}"
    if oc apply -f "${TMP_FILE}"
    then
      print_SUCCESS
    else
      print_FAIL
    fi
  fi

  rm -f "${TMP_FILE}"

  pad2 "Deploying Jenkins in the ${this} namespace"
  ansible-playbook ${playbook_dir}/${this}/jenkins_create.yml &
  pid=$!
  spinner ${pid} 2
  if wait ${pid}
  then
    print_SUCCESS
  else
    print_FAIL
  fi

  ocp4_print_setup_footer
}


function lab_finish {
  ocp4_print_cleanup_header
  ocp4_login_as_admin

  pad2 "Revoking permissions from the jenkins account"
  oc adm policy remove-cluster-role-from-user self-provisioner -z jenkins -n ${this}
  oc adm policy remove-cluster-role-from-user cluster-admin -z jenkins -n ${this}
  oc patch ClusterRoleBinding self-provisioners --type merge -p '{"subjects":[{"apiGroup": "rbac.authorization.k8s.io","kind": "Group","name": "system:authenticated:oauth"}]}'
  print_SUCCESS

  ocp4_delete_project "${this}" test-newdev
  ocp4_restore_oauth

  deploy_ansible

  pad2 "Deleting the Git repository and exercise files"
  ansible-playbook ${playbook_dir}/${this}/gitlab_delete.yml &
  local pid=$!
  spinner ${pid} 2
  if wait ${pid}
  then
    print_SUCCESS
  else
    print_FAIL
  fi

  ocp4_cleanup_lab_files
  ocp4_print_cleanup_footer
}


############### Don't EVER change anything below this line ###############

# Source library of functions
source /usr/local/lib/${function_lib}
source /usr/local/lib/${platform_lib}

grading_main_program "$@"
